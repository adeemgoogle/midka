public class Branch
{
    /// <summary>
    /// Name of the index in elasticsearch
    /// </summary>
    public static string IndexName = "branch";

    /// <summary>
    /// Branch unique id/number
    /// </summary>
    [JsonProperty("id")]
    public string Id { get; set; }

    /// <summary>
    /// Trade point name
    /// </summary>
    [JsonProperty("name")]
    public string Name { get; set; }

    /// <summary>
    /// Trade point type code
    /// </summary>
    [JsonProperty("type")]
    public string Type { get; set; }

    /// <summary>
    /// Filial of bank from reference
    /// </summary>
    [JsonProperty("filial")]
    public string Filial { get; set; }

    /// <summary>
    /// Code of the locality (village / town) from "KATO" reference
    /// </summary>
    [JsonProperty("locality")]
    public string Locality { get; set; }

    /// <summary>
    /// Code of the locality (village / town) from "KATO" reference
    /// </summary>
    [JsonProperty("kato")]
    public string KatoCode { get; set; }

    /// <summary>
    /// Name of street/microdistrict, house number on rus
    /// </summary>
    [JsonProperty("adress")]
    public string Adress { get; set; }

    /// <summary>
    /// Name of street/microdistrict, house number on kaz
    /// </summary>
    [JsonProperty("adressKaz")]
    public string AdressKaz { get; set; }
    
    /// <summary>
    /// Branch number/government office name/trade center name
    /// </summary>
    [JsonProperty("location")]
    public string Location { get; set; }

    /// <summary>
    /// Currence exchange availability
    /// </summary>
    [JsonProperty("curr_exch_fl")]
    public bool CurrencyExchangeFlag { get; set; }

    /// <summary>
    /// Corporate entity servicing availability
    /// </summary>
    [JsonProperty("jur_fl")]
    public bool CorporateEntityFlag { get; set; }

    /// <summary>
    /// Person servicing availability
    /// </summary>
    [JsonProperty("person_fl")]
    public bool PersonEntityFlag { get; set; }

    /// <summary>
    /// Western Union services avalability
    /// </summary>
    [JsonProperty("westUn_fl")]
    public bool WesternUnionFlag { get; set; }

    /// <summary>
    /// Money Gramm services availability
    /// </summary>
    [JsonProperty("money_gramm_fl")]
    public bool MoneyGrammFlag { get; set; }

    /// <summary>
    /// Safe depositary room availability
    /// </summary>
    [JsonProperty("deposit_fl")]
    public bool DepositoryFlag { get; set; }

    /// <summary>
    /// Pay terminal availability
    /// </summary>
    [JsonProperty("terminal_fl")]
    public bool TerminalFlag { get; set; }

    /// <summary>
    /// Premium Halyk zone availability
    /// </summary>
    [JsonProperty("premZone_fl")]
    public bool PremiumZoneFlag { get; set; }

    /// <summary>
    /// true = if all-day available, otherwise - false
    /// </summary>
    [JsonProperty("allDay_fl")]
    public bool AllDayFlag { get; set; }

    /// <summary>
    /// Address information in terms of branch
    /// </summary>
    [JsonProperty("address")]
    public Address Address { get; set; }

    /// <summary>
    /// Weekdays working schedule
    /// </summary>
    [JsonProperty("weekday_time")]
    public WorkTime WeekdayTime { get; set; }

    /// <summary>
    /// Saturday working schedule
    /// </summary>
    [JsonProperty("sat_work_time")]
    public WorkTime SaturdayWorkTime { get; set; }

    /// <summary>
    /// Sunday working schedule
    /// </summary>
    [JsonProperty("sun_work_time")]
    public WorkTime SundayWorkTime { get; set; }

    /// <summary>
    /// Current work
    /// </summary>
    [JsonProperty("currentWork")]
    public bool CurrentWork { get; set; }
    
    /// <summary>
    /// Availability flag of embossers in branch
    /// </summary>
    [JsonProperty("embosser")]
    public bool Embosser { get; set; }
    
    /// <summary>
    /// Geolocation by utilising longitude and latitude
    /// </summary>
    [GeoPoint(Name = "getLocation")]
    [JsonProperty("geo_location")]
    public GeoLocation GetLocation { get; set; }
    
    
}
