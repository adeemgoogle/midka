public async Task<IEnumerable<Branch>> GetBranchByCorpFlag(bool? corporate_entity_flag)
{
    var query = "select id FROM branch join branchworktime on branch.id = branchworktime.Branch_id where corporate_entity_flag = @corporate_entity_flag";
    var branches = new List<Branch>();
    using (var cmd = new NpgsqlCommand(query, _connection))
    {
        cmd.Parameters.AddWithValue("@corporate_entity_flag", $"{corporate_entity_flag}");

        using (var reader = await cmd.ExecuteReaderAsync())
        {
            while (await reader.ReadAsync())
            {
                var branch = new Branch
                {
                    Id = reader["id"].ToString(),
                   
                };
                branches.Add(branch);
            }
        }

    }
    return branches;
}

 if (context.GetArgument<bool?>("corporate_entity_flag") != null)
 {
     var branch = _repo.GetBranchByCorpFlag(context.GetArgument<bool>("corporate_entity_flag"));
     return branch;
 }

Field<ListGraphType<BranchType>>(
    "branch",
    arguments: new QueryArguments(
          
          
            new QueryArgument<BooleanGraphType> { Name = "corporateEntityFlag", Description = "Search Branches which can serve corporate entities or not", DefaultValue = null },
          
    ),
    resolve: context => GetResolveContext(context).Result);

не работает фильтрация
