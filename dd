WITH RECURSIVE Ats AS (
    SELECT
        s_ats.id AS ats_id,
        s_ats.parent_id,
        s_ats.d_ats_type_id,
        d_ats_types.value_ru AS location_name,
        d_ats_types.value_kz AS location_name_kz,
        d_ats_types_valuekz.value_kz AS location_type_kz,
        d_ats_types.value_ru AS location_type_ru
    FROM s_ats
    LEFT JOIN d_ats_types ON s_ats.d_ats_type_id = d_ats_types.id
    LEFT JOIN d_ats_types_valuekz ON s_ats.id = d_ats_types_valuekz.parent_id
    WHERE s_ats.parent_id IS NULL

    UNION ALL

    SELECT
        s_ats.id,
        s_ats.parent_id,
        s_ats.d_ats_type_id,
        d_ats_types.value_ru,
        d_ats_types.value_kz,
        d_ats_types_valuekz.value_kz,
        d_ats_types_valuekz.value_ru
    FROM Ats
    JOIN s_ats ON Ats.ats_id = s_ats.parent_id
    LEFT JOIN d_ats_types ON s_ats.d_ats_type_id = d_ats_types.id
    LEFT JOIN d_ats_types_valuekz ON s_ats.id = d_ats_types_valuekz.parent_id
)

SELECT
    ats_id,
    COALESCE(location_type_ru, (SELECT value_ru FROM d_ats_types WHERE id = '10')) AS location_type_ru,
    COALESCE(location_type_kz, (SELECT value_kz FROM d_ats_types WHERE id = '10')) AS location_type_kz,
    location_name,
    location_name_kz
FROM Ats
ORDER BY ats_id;
