func (s *Service) download(datasetUrl string) ([]byte, error) {
	req := &httpclient.Request{
		Url:        datasetUrl,
		Header:     header(),
		HTTPMethod: http.MethodGet,
		Params:     url.Values{},
		Body:       &bytes.Buffer{},
	}

	reqByte, err := json.Marshal(req)
	if err != nil {
		return nil, err
	}

	resp, err := httpclient.Do(s.cli, req)
	if err != nil {
		_ = s.logStore.Marks(string(reqByte), string(resp.Body), err.Error(), resp.Code)
		return nil, err
	}

	if resp.Code != http.StatusOK {
		errString := fmt.Sprintf(errors_const.FailedRequestWithStatusError, resp.Code, resp.Body)
		_ = s.logStore.Marks(string(reqByte), string(resp.Body), EmprtyString, resp.Code)

		return nil, errors.New(errString)
	}

	_ = s.logStore.Marks(string(reqByte), string(resp.Body), EmprtyString, resp.Code)

	return resp.Body, nil
}
