 string secnameUtf8 = row.GetAsString("SECNAME");
 if (secnameUtf8 != null)
 {
     byte[] bytes = Encoding.Default.GetBytes(secnameUtf8);
     
     string secname = Encoding.UTF8.GetString(bytes);
     securityRow.secName = secname;
 }

this code send me �����������
������������ 
how to fix it?
string secnameUtf8 = row.GetAsString("SECNAME");

if (secnameUtf8 != null)
{
  // Try multiple encodings to handle potential unknown origin
  string secname = TryDecodeWithEncodings(secnameUtf8);

  if (secname != null)
  {
    securityRow.secName = secname;
  }
  else
  {
    // Handle cases where decoding fails (e.g., log error or use a replacement value)
    Console.WriteLine("Failed to decode SECNAME with common encodings.");
  }
}

// Function to try multiple encodings
string TryDecodeWithEncodings(string text)
{
  // Try UTF-8 first (common assumption)
  string result = Encoding.UTF8.GetString(Encoding.Default.GetBytes(text));
  if (result != null) return result;

  // Try other common encodings if UTF-8 fails
  foreach (var encoding in new Encoding[] { Encoding.GetEncoding("windows-1251"), Encoding.ASCII })
  {
    try
    {
      result = encoding.GetString(Encoding.Default.GetBytes(text));
      if (result != null) return result;
    }
    catch (DecoderFallbackException)
    {
      // Ignore exception if encoding fails, try next one
    }
  }

  return null; // Indicate failure to decode
}


string secnameUtf8 = row.GetAsString("SECNAME");

if (secnameUtf8 != null)
{
  // Try to identify original encoding (replace with your logic)
  string originalEncoding = "windows-1251"; // Replace with actual encoding

  try
  {
    // Targeted conversion based on identified encoding
    Encoding encoding = Encoding.GetEncoding(originalEncoding);
    string secname = encoding.GetString(Encoding.Default.GetBytes(secnameUtf8));
    securityRow.secName = secname;
  }
  catch (DecoderFallbackException ex)
  {
    // Handle decoding errors (e.g., log error or replace problematic characters)
    Console.WriteLine($"Failed to decode SECNAME: {ex.Message}");
    // Consider using Iconv for character replacement here
  }
}




