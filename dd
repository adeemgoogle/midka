package main

import (
    "encoding/xml"
)

type Response struct {
    XMLName  xml.Name `xml:"Response"`
    Text     string   `xml:",omitempty"`
    SoapEnv  string   `xml:"SoapEnv,omitempty"`
    Header   string   `xml:"Header,omitempty"`
    Body     Body     `xml:"Body,omitempty"`
}

type Body struct {
    Text              string            `xml:",omitempty"`
    ZHCMFM0195Response ZHCMFM0195Response `xml:"ZHCMFM0195Response,omitempty"`
}

type ZHCMFM0195Response struct {
    Text       string `xml:",omitempty"`
    N0         string `xml:"N0,omitempty"`
    BEGDA      string `xml:"BEGDA,omitempty"`
    DATAX      string `xml:"DATAX,omitempty"`
    EMPNUMBER  string `xml:"EMPNUMBER,omitempty"`
    ENDDA      string `xml:"ENDDA,omitempty"`
    FIO        string `xml:"FIO,omitempty"`
    ID         string `xml:"ID,omitempty"`
    IDTXT      string `xml:"IDTXT,omitempty"`
    ORCODE1    string `xml:"ORCODE1,omitempty"`
    ORCODE2    string `xml:"ORCODE2,omitempty"`
    ORGEH1     string `xml:"ORGEH1,omitempty"`
    ORGEH2     string `xml:"ORGEH2,omitempty"`
    PLANS      string `xml:"PLANS,omitempty"`
    PLCODE     string `xml:"PLCODE,omitempty"`
    WERKS      string `xml:"WERKS,omitempty"`
    WERKSCODE  string `xml:"WERKSCODE,omitempty"`
}

{
    "XMLName": {
        "Space": "",
        "Local": ""
    },
    "Text": "",
    "SoapEnv": "",
    "Header": "",
    "Body": {
        "Text": "",
        "ZHCMFM0195Response": {
            "Text": "",
            "N0": "",
            "BEGDA": "",
            "DATAX": "",
            "EMPNUMBER": "",
            "ENDDA": "",
            "FIO": "",
            "ID": "",
            "IDTXT": "",
            "ORCODE1": "",
            "ORCODE2": "",
            "ORGEH1": "",
            "ORGEH2": "",
            "PLANS": "",
            "PLCODE": "",
            "WERKS": "",
            "WERKSCODE": ""
        }
    }
}

make it to struct(model) on golang with omitempty
