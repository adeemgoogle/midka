.arent_id IS NULL AND s_ats.d_ats_type_id = s_ats.id
    
    UNION ALL
    
    SELECT
        s_ats.id,
        s_buildings.number
    FROM Building
    JOIN s_ats ON Building.ats_id = s_ats.parent_id
    LEFT JOIN s_geonims ON s_ats.id = s_geonims.s_ats_id
    LEFT JOIN s_buildings ON s_geonims.id = s_buildings.s_geonim_id
    WHERE s_ats.parent_id IS NOT NULL AND s_ats.d_ats_type_id = s_ats.id
)
SELECT * FROM Building;

-- Теперь соединим все таблицы с основной
SELECT
    'Казахстан' AS country,
    R.region,
    C.city,
    S.street,
    B.building,
    A.ats_id,
    A.parent_id,
    A.building_id,
    CASE WHEN D.id = '10' THEN 'Республика' ELSE D.value_ru END AS ats_valueru,
    A.s_ats_nameRU,
    A.s_ats_nameKZ,
    A.Geonim_kz,
    A.Geonim_ru,
    A.GeonimRU,
    A.GeonimKZ,
    A.building_number,
    A.building_pointerru,
    A.building_pointerkz
FROM s_ats A
LEFT JOIN temp_region R ON A.id = R.ats_id
LEFT JOIN temp_city C ON A.id = C.ats_id
LEFT JOIN temp_street S ON A.id = S.ats_id
LEFT JOIN temp_building B ON A.id = B.ats_id
LEFT JOIN d_ats_types D ON A.d_ats_type_id = D.id
WHERE A.parent_id IS NULL AND A.d_ats_type_id = A.id;




SELECT
    'Казахстан' AS country,
    R.region,
    C.city,
    S.street,
    B.building,
    A.id AS ats_id,
    A.parent_id,
    A.building_id,
    CASE WHEN A.id = A.parent_id THEN 'Республика' ELSE D.value_ru END AS ats_valueru,
    A.name_ru AS s_ats_nameRU,
    A.name_kz AS s_ats_nameKZ,
    G.name_kz AS Geonim_kz,
    G.name_ru AS Geonim_ru,
    GT.value_ru AS GeonimRU,
    GT.value_kz AS GeonimKZ,
    B.number AS building_number,
    BP.value_ru AS building_pointerru,
    BP.value_kz AS building_pointerkz
FROM s_ats A
LEFT JOIN (
    WITH RECURSIVE Region AS (
        SELECT
            s_ats.id AS ats_id,
            d_ats_types.value_ru AS region
        FROM s_ats
        LEFT JOIN d_ats_types ON s_ats.d_ats_type_id = d_ats_types.id
        WHERE s_ats.parent_id IS NULL AND s_ats.d_ats_type_id = s_ats.id
    
        UNION ALL
    
        SELECT
            s_ats.id,
            d_ats_types.value_ru
        FROM Region
        JOIN s_ats ON Region.ats_id = s_ats.parent_id
        LEFT JOIN d_ats_types ON s_ats.d_ats_type_id = d_ats_types.id
        WHERE s_ats.parent_id IS NOT NULL AND s_ats.d_ats_type_id = s_ats.id
    )
    SELECT * FROM Region
) R ON A.id = R.ats_id
LEFT JOIN (
    WITH RECURSIVE City AS (
        SELECT
            s_ats.id AS ats_id,
            s_ats.name_ru AS city
        FROM s_ats
        WHERE s_ats.parent_id IS NULL AND s_ats.d_ats_type_id = s_ats.id
    
        UNION ALL
    
        SELECT
            s_ats.id,
            s_ats.name_ru
        FROM City
        JOIN s_ats ON City.ats_id = s_ats.parent_id
        WHERE s_ats.parent_id IS NOT NULL AND s_ats.d_ats_type_id = s_ats.id
    )
    SELECT * FROM City
) C ON A.id = C.ats_id
LEFT JOIN (
    WITH RECURSIVE Street AS (
        SELECT
            s_ats.id AS ats_id,
            s_geonims.name_ru AS street
        FROM s_ats
        LEFT JOIN s_geonims ON s_ats.id = s_geonims.s_ats_id
        WHERE s_ats.parent_id IS NULL AND s_ats.d_ats_type_id = s_ats.id
    
        UNION ALL
    
        SELECT
            s_ats.id,
            s_geonims.name_ru
        FROM Street
        JOIN s_ats ON Street.ats_id = s_ats.parent_id
        LEFT JOIN s_geonims ON s_ats.id = s_geonims.s_ats_id
        WHERE s_ats.parent_id IS NOT NULL AND s_ats.d_ats_type_id = s_ats.id
    )
    SELECT * FROM Street
) S ON A.id = S.ats_id
LEFT JOIN (
    WITH RECURSIVE Building AS (
        SELECT
            s_ats.id AS ats_id,
            s_buildings.number AS building
        FROM s_ats
        LEFT JOIN s_geonims ON s_ats.id = s_geonims.s_ats_id
        LEFT JOIN s_buildings ON s_geonims.id = s_buildings.s_geonim_id
        WHERE s_ats.parent_id IS NULL AND s_ats.d_ats_type_id = s_ats.id
    
        UNION ALL
    
        SELECT
            s_ats.id,
            s_buildings.number
        FROM Building
        JOIN s_ats ON Building.ats_id = s_ats.parent_id
        LEFT JOIN s_geonims ON s_ats.id = s_geonims.s_ats_id
        LEFT JOIN s_buildings ON s_geonims.id = s_buildings.s_geonim_id
        WHERE s_ats.parent_id IS NOT NULL AND s_ats.d_ats_type_id = s_ats.id
    )
    SELECT * FROM Building
) B ON A.id = B.ats_id
LEFT JOIN d_ats_types D ON A.d_ats_type_id = D.id
LEFT JOIN s_geonims G ON A.id = G.s_ats_id
LEFT JOIN d_geonims_types GT ON G.d_geonims_type_id = GT.id
LEFT JOIN d_buildings_pointers BP ON A.d_ats_type_id = BP.id
WHERE A.parent_id IS NULL AND A.d_ats_type_id = A.id;
