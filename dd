public class QueryControllerControllerTests
    {
        private readonly ITestOutputHelper _testOutputHelper;
        [Fact]
        public async Task Post_WithValidQuery_ReturnsOkResult()
        {
            // Arrange
            var schemaMock = new Mock<ISchema>();
            var documentExecuterMock = new Mock<IDocumentExecuter>();

            var controller = new QueryController(schemaMock.Object, documentExecuterMock.Object);

            var query = new QueryDto
            {
                Query = "{\n  atm(id: \"pp\") {\n    id\n    katoCode\n    adress\n    adressKaz\n    allDayFlag\n    cashInCurrencies\n    cashInFlag\n    filial\n    locality\n    location\n    publicFlag\n    geoLocation {\n      latitude\n      longitude\n    }\n    weekdayWorkTime {\n      startTime\n      endTime\n      lunchStart\n      lunchEnd\n    }\n    saturdayWorkTime {\n      startTime\n      endTime\n      lunchStart\n      lunchEnd\n    }\n    sundayWorkTime {\n      startTime\n      endTime\n      lunchStart\n      lunchEnd\n    }\n  }\n}"
            };

            // var expected = new 
            var result = await controller.Post(query);
            Assert.NotNull(result);
            if (!(query is OkObjectResult)) 
            {
                _testOutputHelper.WriteLine($"Assert failed {result.GetType().Name}.");
            }
             
           Assert.IsType<OkObjectResult>(result);
           var okResult = result as OkObjectResult;
           Assert.NotNull(okResult);
           var valResult = okResult.Value;
           _testOutputHelper.WriteLine("Well" + valResult);
           Debug.Assert(result != null, nameof(result) + " != null");
           Assert.Equal(200, okResult.StatusCode);
        }
fix : Object reference not set to an instance of an object.

this my model.cs
public class QueryDto
    
    {
        
        /// <summary>
        /// GraphQL query text
        /// </summary>
        public string Query { get; set; }

        public string OperationName { get; set; }

        public string NamedQuery { get; set; }
       
        /// <summary>
        /// Query parameters
        /// </summary>
        public JObject Variables { get; set; }
    }
}
