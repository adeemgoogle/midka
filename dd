
using System;
using System.Collections.Generic;
using Npgsql;
using Serilog;

public class PostgreSQLService
{
    private string _postgresConnectionString;

    public PostgreSQLService(string postgresConnectionString)
    {
        _postgresConnectionString = postgresConnectionString;
    }

    public void AddATMs(List<ATM> atms)
    {
        Log.Information("Adding ATM data to PostgreSQL");

        string query = @"
            INSERT INTO atm (id, filial, locality, address, address_kaz, location, cashin_flag, public_flag, allday_flag,
                             start_time, end_time, lunch_start, lunch_end, sat_start_time, sat_end_time, sat_lunch_start, sat_lunch_end,
                             sun_start_time, sun_end_time, sun_lunch_start, sun_lunch_end, cashin_currency, currency, lat, lng)
            VALUES (@Id, @Filial, @Locality, @Address, @AddressKaz, @Location, @CashInFlag, @PublicFlag, @AllDayFlag,
                    @StartTime, @EndTime, @LunchStart, @LunchEnd, @SatStartTime, @SatEndTime, @SatLunchStart, @SatLunchEnd,
                    @SunStartTime, @SunEndTime, @SunLunchStart, @SunLunchEnd, @CashInCurrency, @Currency, @Lat, @Lng)";

        using (var connection = new NpgsqlConnection(_postgresConnectionString))
        {
            connection.Open();
            foreach (var atm in atms)
            {
                using (var command = new NpgsqlCommand(query, connection))
                {
                    command.Parameters.AddWithValue("Id", atm.Id);
                    command.Parameters.AddWithValue("Filial", atm.Filial);
                    command.Parameters.AddWithValue("Locality", atm.Locality);
                    command.Parameters.AddWithValue("Address", atm.Address);
                    command.Parameters.AddWithValue("AddressKaz", atm.AddressKaz);
                    command.Parameters.AddWithValue("Location", atm.Location);
                    command.Parameters.AddWithValue("CashInFlag", atm.CashInFlag);
                    command.Parameters.AddWithValue("PublicFlag", atm.PublicFlag);
                    command.Parameters.AddWithValue("AllDayFlag", atm.AllDayFlag);
                    command.Parameters.AddWithValue("StartTime", atm.WeekdayTime.StartTime);
                    command.Parameters.AddWithValue("EndTime", atm.WeekdayTime.EndTime);
                    command.Parameters.AddWithValue("LunchStart", atm.WeekdayTime.LunchStart);
                    command.Parameters.AddWithValue("LunchEnd", atm.WeekdayTime.LunchEnd);
                    command.Parameters.AddWithValue("SatStartTime", atm.SaturdayWorkTime.StartTime);
                    command.Parameters.AddWithValue("SatEndTime", atm.SaturdayWorkTime.EndTime);
                    command.Parameters.AddWithValue("SatLunchStart", atm.SaturdayWorkTime.LunchStart);
                    command.Parameters.AddWithValue("SatLunchEnd", atm.SaturdayWorkTime.LunchEnd);
                    command.Parameters.AddWithValue("SunStartTime", atm.SundayWorkTime.StartTime);
                    command.Parameters.AddWithValue("SunEndTime", atm.SundayWorkTime.EndTime);
                    command.Parameters.AddWithValue("SunLunchStart", atm.SundayWorkTime.LunchStart);
                    command.Parameters.AddWithValue("SunLunchEnd", atm.SundayWorkTime.LunchEnd);
                    command.Parameters.AddWithValue("CashInCurrency", string.Join(";", atm.CashInCurrency));
                    command.Parameters.AddWithValue("Currency", string.Join(";", atm.Currency));
                    command.Parameters.AddWithValue("Lat", atm.GetLocation.Lat);
                    command.Parameters.AddWithValue("Lng", atm.GetLocation.Lng);

                    command.ExecuteNonQuery();
                }
            }
        }

        Log.Information("ATM data added to PostgreSQL");
    }

    // Similar method for branches
}
